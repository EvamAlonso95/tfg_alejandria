services:
  php-app:
    build:
      context: .
      dockerfile: Dockerfile # ← Apunta al archivo Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./php-app:/var/www/html
    container_name: php-app
    restart: unless-stopped
    environment:
      - PHP_ALLOW_URL_FOPEN=1
      - PHP_ALLOW_URL_INCLUDE=1
    command: >
      sh -c "chown -R www-data:www-data /var/www/html/uploads &&
             chmod -R 0755 /var/www/html/uploads &&
             apache2-foreground"

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant-data:/qdrant/storage
    container_name: qdrant
    restart: unless-stopped

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: alejandria
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/tfg_alejandria.sql:/docker-entrypoint-initdb.d/tfg_alejandria.sql
      - ./mysql/enable-root-remote.sql:/docker-entrypoint-initdb.d/enable-root-remote.sql
    container_name: mysql
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=mysql
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "8080:80"
    container_name: phpmyadmin
    restart: unless-stopped
    depends_on:
      - mysql

  qdrant-init:
    build:
      context: .
      dockerfile: Dockerfile # ← Apunta al archivo Dockerfile
    depends_on:
      - qdrant
      - mysql
    volumes:
      - ./php-app:/var/www/html
    working_dir: /var/www/html/qdrant
    command:
      [
        "sh",
        "-c",
        "echo 'Esperando 60 segundos para que MySQL arranque...'; sleep 60; php initialize.php; echo 'Inicialización completa.'",
      ]

    restart: "no"

volumes:
  db_data:

networks:
  qdrant-network:
    driver: bridge
